---------------------------------------------------
---------------------------------------------------
-- POSTGRESQL 9.1 MANUAL PARTITION TABLE BY DATE --
---------------------------------------------------
---------------------------------------------------
-- Author: https://github.com/vitovitolo

---------------
-- CHECKS -----
---------------

CREATE TABLE "tableA_2014_02_01" (
CHECK ( date >= TIMESTAMP WITH TIME ZONE '2014-02-01 00:00:00+01' AND date < TIMESTAMP WITH TIME ZONE '2014-02-02 00:00:00+01' )
 ) INHERITS (tableA);


CREATE TABLE "tableA_2014_02_02" (
CHECK ( date >= TIMESTAMP WITH TIME ZONE '2014-02-02 00:00:00+01' AND date < TIMESTAMP WITH TIME ZONE '2014-02-03 00:00:00+01' )
 ) INHERITS (tableA);

 CREATE TABLE "tableA_2014_02_03" (
CHECK ( date >= TIMESTAMP WITH TIME ZONE '2014-02-03 00:00:00+01' AND date < TIMESTAMP WITH TIME ZONE '2014-02-04 00:00:00+01' )
 ) INHERITS (tableA);

 CREATE TABLE "tableA_2014_02_04" (
CHECK ( date >= TIMESTAMP WITH TIME ZONE '2014-02-04 00:00:00+01' AND date < TIMESTAMP WITH TIME ZONE '2014-02-05 00:00:00+01' )
 ) INHERITS (tableA);

 CREATE TABLE "tableA_2014_02_05" (
CHECK ( date >= TIMESTAMP WITH TIME ZONE '2014-02-05 00:00:00+01' AND date < TIMESTAMP WITH TIME ZONE '2014-02-06 00:00:00+01' )
 ) INHERITS (tableA);

-- PRIVILEGES

GRANT ALL PRIVILEGES ON tableA_2014_02_01 TO databaseA;
GRANT ALL PRIVILEGES ON tableA_2014_02_02 TO databaseA;
GRANT ALL PRIVILEGES ON tableA_2014_02_03 TO databaseA;
GRANT ALL PRIVILEGES ON tableA_2014_02_04 TO databaseA;
GRANT ALL PRIVILEGES ON tableA_2014_02_05 TO databaseA;

 -- INDICES:

 CREATE INDEX tableA_2014_02_01_date ON tableA_2014_02_01 (date);
 CREATE INDEX tableA_2014_02_02_date ON tableA_2014_02_02 (date);
 CREATE INDEX tableA_2014_02_03_date ON tableA_2014_02_03 (date);
 CREATE INDEX tableA_2014_02_04_date ON tableA_2014_02_04 (date);
 CREATE INDEX tableA_2014_02_05_date ON tableA_2014_02_05 (date);


 -- FUNCTION TO INSERT

CREATE OR REPLACE FUNCTION tableA_insert_function()
RETURNS TRIGGER AS $$
BEGIN
    IF ( NEW.date >= TIMESTAMP WITH TIME ZONE '2014-02-01 00:00:00+01' AND
         NEW.date < TIMESTAMP WITH TIME ZONE '2014-02-02 00:00:00+01' ) THEN
        INSERT INTO tableA_2014_02_01 VALUES (NEW.*);
    ELSIF ( NEW.date >= TIMESTAMP WITH TIME ZONE '2014-02-02 00:00:00+01' AND
            NEW.date < TIMESTAMP WITH TIME ZONE '2014-02-03 00:00:00+01' ) THEN
        INSERT INTO tableA_2014_02_02 VALUES (NEW.*);
    ELSIF ( NEW.date >= TIMESTAMP WITH TIME ZONE '2014-02-03 00:00:00+01' AND
            NEW.date < TIMESTAMP WITH TIME ZONE '2014-02-04 00:00:00+01' ) THEN
        INSERT INTO tableA_2014_02_03 VALUES (NEW.*);
    ELSIF ( NEW.date >= TIMESTAMP WITH TIME ZONE '2014-02-04 00:00:00+01' AND
            NEW.date < TIMESTAMP WITH TIME ZONE '2014-02-05 00:00:00+01' ) THEN
        INSERT INTO tableA_2014_02_04 VALUES (NEW.*);
    ELSIF ( NEW.date >= TIMESTAMP WITH TIME ZONE '2014-02-05 00:00:00+01' AND
            NEW.date < TIMESTAMP WITH TIME ZONE '2014-02-06 00:00:00+01' ) THEN
        INSERT INTO tableA_2014_02_05 VALUES (NEW.*);
    ELSE
        RAISE EXCEPTION 'Date out of range.  Fix the tableA_insert_function() function!';
    END IF;
    RETURN NULL;
END;
$$
LANGUAGE plpgsql;

-- TRIGGER TO THAT FUNCTION

CREATE TRIGGER insert_tableA_trigger
    BEFORE INSERT ON tableA
    FOR EACH ROW EXECUTE PROCEDURE tableA_insert_function();

-- DROP TRIGGER AND FUNC

-- DROP TRIGGER insert_tableA_trigger;
-- DROP FUNCTION tableA_insert_function;



-----------------------------------------
-- RULES METHOD
-----------------------------------------


 CREATE RULE tableA_2014_02_01 AS
ON INSERT TO tableA WHERE
    ( date >= TIMESTAMP WITH TIME ZONE '2014-02-01 00:00:00+01' AND date < TIMESTAMP WITH TIME ZONE '2014-02-02 00:00:00+01' )
DO INSTEAD
    INSERT INTO tableA_2014_02_01 VALUES (NEW.*);


CREATE RULE tableA_2014_02_02 AS
ON INSERT TO tableA WHERE
    ( date >= TIMESTAMP WITH TIME ZONE '2014-02-02 00:00:00+01' AND date < TIMESTAMP WITH TIME ZONE '2014-02-03 00:00:00+01' )
DO INSTEAD
    INSERT INTO tableA_2014_02_02 VALUES (NEW.*);



    CREATE RULE tableA_2014_02_03 AS
ON INSERT TO tableA WHERE
    ( date >= TIMESTAMP WITH TIME ZONE '2014-02-03 00:00:00+01' AND date < TIMESTAMP WITH TIME ZONE '2014-02-04 00:00:00+01' )
DO INSTEAD
    INSERT INTO tableA_2014_02_03 VALUES (NEW.*);



    CREATE RULE tableA_2014_02_04 AS
ON INSERT TO tableA WHERE
    ( date >= TIMESTAMP WITH TIME ZONE '2014-02-04 00:00:00+01' AND date < TIMESTAMP WITH TIME ZONE '2014-02-05 00:00:00+01' )
DO INSTEAD
    INSERT INTO tableA_2014_02_04 VALUES (NEW.*);



    CREATE RULE tableA_2014_02_05 AS
ON INSERT TO tableA WHERE
    ( date >= TIMESTAMP WITH TIME ZONE '2014-02-05 00:00:00+01' AND date < TIMESTAMP WITH TIME ZONE '2014-02-06 00:00:00+01' )
DO INSTEAD
    INSERT INTO tableA_2014_02_05 VALUES (NEW.*);


-- DELETE INHERITANCE

ALTER TABLE  tableA_2014_02_01 NO INHERIT tableA
ALTER TABLE  tableA_2014_02_02 NO INHERIT tableA
ALTER TABLE  tableA_2014_02_03 NO INHERIT tableA
ALTER TABLE  tableA_2014_02_04 NO INHERIT tableA
ALTER TABLE  tableA_2014_02_05 NO INHERIT tableA



-- DROP RULES


DROP RULE IF EXISTS tableA_2014_02_01 on tableA;
DROP RULE IF EXISTS tableA_2014_02_02 on tableA;
DROP RULE IF EXISTS tableA_2014_02_03 on tableA;
DROP RULE IF EXISTS tableA_2014_02_04 on tableA;
DROP RULE IF EXISTS tableA_2014_02_05 on tableA;


-- DROP INHERITS TABLES

DROP TABLE tableA_2014_02_01;
DROP TABLE tableA_2014_02_02;
DROP TABLE tableA_2014_02_03;
DROP TABLE tableA_2014_02_04;
DROP TABLE tableA_2014_02_05;
